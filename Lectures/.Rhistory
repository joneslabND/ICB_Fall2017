a=c(1,2,3)
a
sum(a)
suma=sum(a)
suma
?summary
?sum
a
str(a)
length(a)
dim(a)
names(a)=c('tree1','tree2','tree3')
a
?c
v=numeric(length=5)
v
str(v)
v=c(1,3,5,9,13)
v[3]
4:5
v[4:5]
v<6
v[v<6]
?matrix
A=matrix(0,nrow=2,ncol=2)
A
matrix(c(1,2,3,4),nrow=2,ncol=2,byrow=TRUE)
matrix(c(1,2,3,4),nrow=2,ncol=2,byrow=FALSE)
A=matrix(c(1,2,3,4),nrow=2,ncol=2,byrow=TRUE)
a
A
A[2,1]
A[1:2,2]
A
A[,2]
A=matrix(c("tree1",37,"tree2",137),nrow=2,byrow=TRUE)
A
A[,2]/2
B=array(rep(1:4,2),dim=c(2,2,2))
B
a=list(name="walleye",length=225,tagged=TRUE)
a
a[[1]]
a$name
a[["name"]]
a$tagged=NULL
a
a
a$name="bass"
a$length=100
a$name="bass"
a$length=100
a
a$name=c(a$name,"walleye")
a$length=c(a$length,225)
a
names=c("walleye","perch")
weight=c(270,57)
d=data.frame(names,weight,stringsAsFactors=FALSE)
d
str(d)
d
d[2,2]
d$weight[,2]
d$weight[2]
rm(list=ls())
namesM1=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Mauna','Colin','Patrick','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke','Yingying','Diana')
namesM2=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Mauna','Colin','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke')
namesM3=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Mauna','Colin','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke','Martha','Meredith','Brandon','Rachel','Carmella')
length(namesM1)
groups=matrix(c(sample(namesM1,length(namesM1)),rep(NA,2)),nrow=5,ncol=5)
colnames(groups)=paste("Group ",1:5)
groups
groups=matrix(c(sample(c(namesM1,NA,NA),(length(namesM1)+2)),nrow=5,ncol=5)
colnames(groups)=paste("Group ",1:5)
groups=matrix(sample(c(namesM1,NA,NA),(length(namesM1)+2)),nrow=5,ncol=5)
groups
colnames(groups)=paste("Group ",1:5)
groups
for(i in 1:5){print(i)}
print(1:5)
D=matrix(runif(100),10,10)
dim(D)
head(D)
for(i in 1:nrow(D)){}
for(i in 1:nrow(D)){mean(i)}
for(i in 1:nrow(D)){(mean(i))}
for(i in 1:nrow(D)){print(mean(i))}
for(i in 1:nrow(D)){print(mean(D[i,]))}
D
means=1:nrow(D)
for(i in 1:nrow(D)){
means[i]=mean(D[i,])
}
means
A=matrix(0,nrow=9,ncol=9)
A
dim(A)
### 1 through 9 multiplication table
A=matrix(0,nrow=9,ncol=9)
for(i in 1:9){
A[1,i]=1*i
}
A
### 1 through 9 multiplication table
A=matrix(0,nrow=9,ncol=9)
for(i in 1:9){
for(j in 1:9){
A[j,i]=j*i
}
}
A
x=1:3
y=4:6
x+y
x=runif(n=1e6,min=0,max=100)
y=runif(n=1e6,min=0,max=100)
length(x)
length(y)
z=numeric(length(x))
x=runif(n=1e6,min=0,max=100)
y=runif(n=1e6,min=0,max=100)
z=numeric(length(x))
system.time(for(i in 1:length(x)){z[i]=x[i]+y[i]})
system.time(z<-x+y)
X=cbind(runif(100,0,10),rep(1:10,10))
dim(X)
head(X)
tapply(X[,1],X[,2],mean)
rm(list=ls())
namesM1=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Mauna','Colin','Patrick','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke','Yingying','Diana')
namesM2=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Mauna','Colin','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke')
namesM3=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Mauna','Colin','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke','Martha','Meredith','Brandon','Rachel','Carmella')
length(namesM1)
length(namesM2)
length(namesM3)
groups=matrix(sample(c(namesM1,NA,NA),(length(namesM1)+2)),nrow=5,ncol=5)
colnames(groups)=paste("Group ",1:5)
rm(list=ls())
namesM1=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Mauna','Colin','Patrick','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke','Yingying','Diana')
namesM2=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Mauna','Colin','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke')
namesM3=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Mauna','Colin','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke','Martha','Meredith','Brandon','Rachel','Carmella')
length(namesM1)
length(namesM2)
length(namesM3)
groups=matrix(sample(c(namesM1,NA,NA),(length(namesM1)+2)),nrow=5,ncol=5)
colnames(groups)=paste("Group ",1:5)
groups
groups[,1:4]
namesM1=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Colin','Patrick','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke','Yingying')
namesM2=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Mauna','Colin','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke')
namesM3=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Mauna','Colin','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke','Martha','Meredith','Brandon','Rachel','Carmella')
length(namesM1)
length(namesM2)
length(namesM3)
groups=matrix(sample(namesM1,length(namesM1)),nrow=4,ncol=4)
colnames(groups)=paste("Group ",1:4)
groups
length(namesM1)
namesM1=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Colin','Patrick','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke','Yingying','Diana')
length(namesM1)
namesM1=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Colin','Patrick','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke','Yingying','Diana')
groups=matrix(sample(c(namesM1,rep(NA,2)),length(namesM1)+2),nrow=5,ncol=4)
colnames(groups)=paste("Group ",1:4)
groups=matrix(sample(c(namesM1,rep(NA,3)),length(namesM1)+3),nrow=5,ncol=4)
colnames(groups)=paste("Group ",1:4)
groups
f<-function(y){
d=8
h<-function(){
return(d*(w+y))
}
return(h())
}
y=2
f(y)
environment(f)
ls()
ls.str()
rm(list=ls())
w=12
h<-function(){
return(d*(w+y))
}
f<-function(y){
d=8
return(h())
}
f(5)
w=12
f<-function(y){
d=8
h<-function(){
return(d*(w+y))
}
return(h())
}
y=2
f(y)
d*(w+y)
environment(f)
ls()
rm(list=ls())
ls()
w=12
f<-function(y){
d=8
h<-function(){
return(d*(w+y))
}
return(h())
}
y=2
f(y)
d*(w+y)
ls()
rm(list=ls())
w=12
f<-function(y){
d=8
h<-function(){
return(d*(w+y))
}
print(environment(h))
return(h())
}
y=2
f(y)
d*(w+y)
mean<-function(x){
mu=sum(x)/length(x)
return(mu)
}
y=c(1,2,3,4,5)
mean(y)
?mean
??remove NA
obs=1:5
obsNA=c(NA,1:5)
obs=1:5
obsNA=c(NA,1:5)
na.omit(obsNA)
z=na.omit(obsNA)
z
z/2
?na.omit
mean<-function(x,na.rm=FALSE){
if(is.na(x)==TRUE){
return(NA)
}else{
sum(x)/length(x)
}
}
obs=1:5
obsNA=c(NA,1:5)
mean(obs)
mean(obsNA)
obsNA2=c(1:5,NA)
mean(obsNA2)
sum(1:5)
?sum
sum(obsNA2)
is.na(obsNA2)
?any
any(is.na(obsNA2))
#defining function to calculate means from vector 'x'
# handles NA values in x with 'na.rm' argument
mean<-function(x,na.rm=FALSE){
if(any(is.na(x))==TRUE){
return("You have NAs")
}else{
sum(x)/length(x)
}
}
obs=1:5
mean(obsNA2)
mean(obs)
obsNA
na.omit(obsNA)
mean<-function(x,na.rm=FALSE){
if(na.rm==TRUE){
z=na.omit(x)
sum(z)/length(z)
}else{
if(any(is.na(x))==TRUE){
return("You have NAs")
}else{
sum(x)/length(x)
}
}
}
mean<-function(x,na.rm=FALSE){
if(na.rm==TRUE){
z=na.omit(x)
sum(z)/length(z)
}else{
if(any(is.na(x))==TRUE){
return("You have NAs")
}else{
sum(x)/length(x)
}
}
}
obs=1:5
obsNA=c(NA,1:5)
obsNA2=c(1:5,NA)
mean<-function(x,na.rm=FALSE){
if(na.rm==TRUE){
z=na.omit(x)
sum(z)/length(z)
}else{
if(any(is.na(x))==TRUE){
return("You have NAs")
}else{
sum(x)/length(x)
}
}
}
obs=1:5
obsNA=c(NA,1:5)
obsNA2=c(1:5,NA)
mean(obs)
mean(obsNA)
mean(obsNA,na.rm=TRUE)
ls()
rm(list=ls())
w=12
f<-function(y){
d=8
h<-function(){
return(d*(w+y))
}
return(h())
}
y=2
f(y)
d*(w+y)
w=12
f<-function(y){
d=8
h<-function(){
return(d*(w+y))
}
return(h())
}
y=2
f(y)
ls
ls()
rm(list=ls())
f<-function(y){
d=8
h<-function(){
return(d*(w+y))
}
return(h())
}
y=2
f(y)
d*(w+y)
d*(w+Y)
d*(w+y)
environment(f)
environment(h)
f<-function(y){
d=8
h<-function(){
return(d*(w+y))
}
environment(h)
return(h())
}
y=2
f(y)
w=12
f<-function(y){
d=8
h<-function(){
return(d*(w+y))
}
environment(h)
return(h())
}
y=2
f(y)
rm(list=ls())
w=12
f<-function(y){
d=8
h<-function(){
return(d*(w+y))
}
print(environment(h))
return(h())
}
y=2
f(y)
# scoping example
rm(list=ls())
w=12
f<-function(y){
d=8
print(environment(h))
h<-function(){
return(d*(w+y))
}
return(h())
}
y=2
f(y)
environment(w)
environment(y)
environment(f)
?environment
?optim
SSEcalc<-function(p,x,y){
b=p[1]
m=p[2]
yhat=m*x+b
errors=y-yhat
SSE=sum(errors*errors)
return(SSE)
}
x=sample(1:25,10)
y=rnorm(10,x*2+1,sd=0.0000001)
y=rnorm(10,x*2+1,sd=5)
plot(x,y)
guess=c("b"=1,"m"=1)
modelFit=optim(guess,SSEcalc,x=x,y=y)
abline(a=modelFit$par[1],b=modelFit$par[2])
modelFit
rm(list=ls())
namesM1=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Colin','Patrick','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke','Yingying','Diana')
namesM2=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Mauna','Colin','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke')
namesM3=c('Katherine B.','Brittni','Caitlin','Timothy','Whitney','Mauna','Colin','Benjamin','Chinedu','Erin','Katherine O.','Carly','Jody','Devin','Brooke','Martha','Meredith','Brandon','Rachel','Carmella')
length(namesM1)
length(namesM2)
length(namesM3)
groups=matrix(sample(c(namesM1,rep(NA,3)),length(namesM1)+3),nrow=5,ncol=4)
colnames(groups)=paste("Group ",1:4)
groups
groups
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(ggplot2)
dev.new()
par(mfrow(c(2,1)))
par(mfrow=c(2,1)))
par(mfrow=c(2,1))
plot(1:5,1:5)
plot(1:5,1:5)
plot(1:5,1:5)
setwd("~/Documents/Teaching/Intro2Comp/ICB_Fall2017/Lectures/")
list.files()
